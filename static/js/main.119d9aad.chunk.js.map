{"version":3,"sources":["hooks/useFetch.js","components/UI/Figure/Figure.js","components/Pokemon/PokemonTypesList/PokemonTypesList.js","components/Card/CardFront/CardFront.js","components/Pokemon/PokemonEvolutionsList/PokemonEvolutionsList.js","components/Card/CardBack/CardBack.js","components/Card/Card.js","components/PokedexList/PokedexList.js","containers/App/App.js","index.js"],"names":["useFetch","url","defaultData","useState","data","updateData","useEffect","a","fetch","response","json","fetchData","Figure","props","alt","caption","forceHttps","height","src","width","imgSrc","replace","length","className","PokemonTypesList","children","types","getTypeCss","type","normalizedText","String","toLowerCase","map","key","CardFront","id","img","name","PokemonEvolutionsList","evolutions","evolution","CardBack","next_evolution","weaknesses","weight","scope","Card","isFrontCard","setCardState","cardStateCss","onClick","prevState","PokedexList","pokemon","messageOutput","outputList","p","App","result","sort","b","aName","bName","useFetchPokemon","href","ReactDOM","render","document","getElementById"],"mappings":"mYAkBeA,MAhBf,SAAkBC,EAAKC,GAAc,IAAD,EACLC,mBAASD,GADJ,mBACzBE,EADyB,KACnBC,EADmB,KAahC,OAVAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAMP,GADjC,cACUQ,EADV,gBAEuBA,EAASC,OAFhC,OAEUA,EAFV,OAGIL,EAAWK,GAHf,4CADY,uBAAC,WAAD,wBAOZC,KACD,CAACV,IAEGG,G,MCQIQ,MApBf,SAAgBC,GAAQ,IAAD,EACqDA,EAAhEC,WADW,MACL,GADK,IACqDD,EAAtDE,eADC,MACS,GADT,EACaC,EAAwCH,EAAxCG,WAAYC,EAA4BJ,EAA5BI,OADzB,EACqDJ,EAApBK,WADjC,MACuC,GADvC,EAC2CC,EAAUN,EAAVM,MAC1DC,EAASF,EAMb,OAJIF,IACAI,EAASA,EAAOC,QAAQ,SAAU,WAIlC,kBAAC,WAAD,KACKH,EAAII,OACD,4BAAQC,UAAU,kBACd,yBAAKJ,MAAOA,EAAOF,OAAQA,EAAQC,IAAKE,EAAQN,IAAKA,IACpDC,EAAQO,OAAS,oCAAaP,GAAwB,MAE3D,O,MCWDS,MA1Bf,SAA0BX,GAAQ,IACtBY,EAAyBZ,EAAzBY,SADqB,EACIZ,EAAfa,aADW,MACH,GADG,EAG7B,SAASC,EAAWC,GAChB,IAAMC,EAAiBC,OAAOF,GACzBP,QAAQ,OAAQ,KAChBU,cACL,MAAM,SAAN,OAAgBF,GAGpB,OACI,kBAAC,WAAD,KACKJ,EACAC,EAAMJ,OACH,wBAAIC,UAAU,sBACTG,EAAMM,KAAI,SAACJ,GAAD,OACP,wBAAIK,IAAKL,EAAML,UAAWI,EAAWC,IAChCA,OAIb,O,MCDDM,MAlBf,SAAmBrB,GAAQ,IACfsB,EAAwBtB,EAAxBsB,GAAIC,EAAoBvB,EAApBuB,IAAKC,EAAexB,EAAfwB,KAAMT,EAASf,EAATe,KACvB,OACI,yBAAKL,UAAU,oBACX,gCACI,kBAAC,EAAD,CAAQP,YAAU,EAACE,IAAKkB,EAAKjB,MAAM,MAAMF,OAAO,QAChD,4BACI,0BAAMM,UAAU,cAAhB,IAA+BY,GADnC,IAC+CE,IAInD,kBAAC,EAAD,CAAkBX,MAAOE,GACrB,wBAAIL,UAAU,mBAAd,sB,MCMDe,MApBf,SAA+BzB,GAAQ,IAC3BY,EAA8BZ,EAA9BY,SAD0B,EACIZ,EAApB0B,kBADgB,MACH,GADG,EAGlC,OACI,kBAAC,WAAD,KACKd,EACAc,EAAWjB,OACR,wBAAIC,UAAU,2BACTgB,EAAWP,KAAI,SAACQ,GACb,IAAMH,EAAOG,EAAUH,KACvB,OAAO,wBAAIJ,IAAKI,GAAOA,OAI/B,S,MCqBDI,MAjCf,SAAkB5B,GAAQ,IAAD,EAC6DA,EAA1EI,cADa,MACJ,IADI,EACCoB,EAA4DxB,EAA5DwB,KADD,EAC6DxB,EAAtD6B,sBADP,MACwB,GADxB,IAC6D7B,EAAjC8B,kBAD5B,MACyC,GADzC,IAC6D9B,EAAhB+B,cAD7C,MACsD,GADtD,EAErB,OACI,yBAAKrB,UAAU,mBACX,2BAAOA,UAAU,iBACb,iCAAUc,EAAV,eACA,+BACI,4BACI,wBAAIQ,MAAM,OAAV,UACA,4BAAK5B,IAET,4BACI,wBAAI4B,MAAM,OAAV,UACA,4BAAKD,IAET,4BACI,wBAAIC,MAAM,OAAV,cACA,4BACI,kBAAC,EAAD,CAAkBnB,MAAOiB,MAGjC,4BACI,wBAAIE,MAAM,OAAV,kBACA,4BACI,kBAAC,EAAD,CAAuBN,WAAYG,U,MCOhDI,MA9Bf,SAAcjC,GAAQ,IACVsB,EAAoEtB,EAApEsB,GAAIC,EAAgEvB,EAAhEuB,IAAKnB,EAA2DJ,EAA3DI,OAAQoB,EAAmDxB,EAAnDwB,KAAMK,EAA6C7B,EAA7C6B,eAAgBd,EAA6Bf,EAA7Be,KAAMe,EAAuB9B,EAAvB8B,WAAYC,EAAW/B,EAAX+B,OADhD,EAEmBzC,oBAAS,GAF5B,mBAEV4C,EAFU,KAEGC,EAFH,KAGbC,EAAe,uBAMnB,OAJKF,IACDE,EAAe,uBAIf,6BAASd,GAAE,kBAAaE,GAAQd,UAAW0B,GACvC,yBAAK1B,UAAU,aACX,kBAAC,EAAD,CAAWY,GAAIA,EAAIC,IAAKA,EAAKC,KAAMA,EAAMT,KAAMA,IAC/C,kBAAC,EAAD,CACIX,OAAQA,EACRkB,GAAIA,EACJE,KAAMA,EACNK,eAAgBA,EAChBC,WAAYA,EACZC,OAAQA,KAIhB,4BAAQrB,UAAU,kBAAkB2B,QAAS,kBAAMF,GAAa,SAACG,GAAD,OAAgBA,OAC5E,0BAAM5B,UAAU,mBAAhB,QAAwCc,EAAxC,Y,MCRDe,MAlBf,SAAqBvC,GAAQ,IAAD,EACCA,EAAjBwC,eADgB,MACN,GADM,EAGlBC,EAAgB,uBAAG/B,UAAU,mBAAb,+BAEhBgC,EACF,wBAAIhC,UAAU,gBACT8B,EAAQrB,KAAI,SAACwB,GAAD,OACT,wBAAIvB,IAAKuB,EAAErB,IACP,kBAAC,EAASqB,QAM1B,OAAO,kBAAC,WAAD,KAAWH,EAAQ/B,OAASiC,EAAaD,I,MC8BrCG,MAnBf,WACI,IAAMJ,EAzBV,WACI,IAAMK,EAAS1D,EAAS,gFAAiF,IAEzG,OAAI0D,EAAOL,QAGAK,EAAOL,QAAQM,MAAK,SAACpD,EAAGqD,GAC3B,IAAMC,EAAQtD,EAAE8B,KAAKN,cACf+B,EAAQF,EAAEvB,KAAKN,cAErB,OAAI8B,EAAQC,EACD,EACAD,EAAQC,GACP,EAIL,KAIR,GAISC,GAChB,OACI,kBAAC,WAAD,KACI,uBAAGxC,UAAU,YAAYyC,KAAK,SAA9B,wBAIA,gCACI,wDAGJ,0BAAM7B,GAAG,QACL,kBAAC,EAAD,CAAakB,QAASA,OCrCtCY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.119d9aad.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultData) {\n    const [data, updateData] = useState(defaultData);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(url);\n            const json = await response.json();\n            updateData(json);\n        }\n\n        fetchData();\n    }, [url]);\n\n    return data;\n}\n\nexport default useFetch;\n","import React, { Fragment } from \"react\";\nimport \"./Figure.css\";\n\nfunction Figure(props) {\n    const { alt = \"\", caption = \"\", forceHttps, height, src = \"\", width } = props;\n    let imgSrc = src;\n\n    if (forceHttps) {\n        imgSrc = imgSrc.replace(/^http:/, \"https:\");\n    }\n\n    return (\n        <Fragment>\n            {src.length ? (\n                <figure className=\"pokemon-figure\">\n                    <img width={width} height={height} src={imgSrc} alt={alt} />\n                    {caption.length ? <figcaption>{caption}</figcaption> : null}\n                </figure>\n            ) : null}\n        </Fragment>\n    );\n}\n\nexport default Figure;\n","import React, { Fragment } from \"react\";\nimport \"./PokemonTypesList.css\";\n\nfunction PokemonTypesList(props) {\n    const { children, types = [] } = props;\n\n    function getTypeCss(type) {\n        const normalizedText = String(type)\n            .replace(/\\s/gi, \"-\")\n            .toLowerCase();\n        return `type--${normalizedText}`;\n    }\n\n    return (\n        <Fragment>\n            {children}\n            {types.length ? (\n                <ul className=\"pokemon-types-list\">\n                    {types.map((type) => (\n                        <li key={type} className={getTypeCss(type)}>\n                            {type}\n                        </li>\n                    ))}\n                </ul>\n            ) : null}\n        </Fragment>\n    );\n}\n\nexport default PokemonTypesList;\n","import React from \"react\";\nimport Figure from \"../../UI/Figure/Figure\";\nimport PokemonTypesList from \"../../Pokemon/PokemonTypesList/PokemonTypesList\";\nimport \"./CardFront.css\";\n\nfunction CardFront(props) {\n    const { id, img, name, type } = props;\n    return (\n        <div className=\"face face--front\">\n            <header>\n                <Figure forceHttps src={img} width=\"120\" height=\"120\" />\n                <h2>\n                    <span className=\"pokemon-id\">#{id}</span> {name}\n                </h2>\n            </header>\n\n            <PokemonTypesList types={type}>\n                <h3 className=\"visually-hidden\">Pok√©mon type</h3>\n            </PokemonTypesList>\n        </div>\n    );\n}\n\nexport default CardFront;\n","import React, { Fragment } from \"react\";\nimport \"./PokemonEvolutionsList.css\";\n\nfunction PokemonEvolutionsList(props) {\n    const { children, evolutions = [] } = props;\n\n    return (\n        <Fragment>\n            {children}\n            {evolutions.length ? (\n                <ol className=\"pokemon-evolutions-list\">\n                    {evolutions.map((evolution) => {\n                        const name = evolution.name;\n                        return <li key={name}>{name}</li>;\n                    })}\n                </ol>\n            ) : (\n                \"None\"\n            )}\n        </Fragment>\n    );\n}\n\nexport default PokemonEvolutionsList;\n","import React from \"react\";\nimport PokemonEvolutionsList from \"../../Pokemon/PokemonEvolutionsList/PokemonEvolutionsList\";\nimport PokemonTypesList from \"../../Pokemon/PokemonTypesList/PokemonTypesList\";\nimport \"./CardBack.css\";\n\nfunction CardBack(props) {\n    const { height = \"-\", name, next_evolution = [], weaknesses = [], weight = \"\" } = props;\n    return (\n        <div className=\"face face--back\">\n            <table className=\"pokemon-specs\">\n                <caption>{name} statistics</caption>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">Height</th>\n                        <td>{height}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Weight</th>\n                        <td>{weight}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Weaknesses</th>\n                        <td>\n                            <PokemonTypesList types={weaknesses} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">Next evolution</th>\n                        <td>\n                            <PokemonEvolutionsList evolutions={next_evolution} />\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default CardBack;\n","import React, { useState } from \"react\";\n\nimport CardFront from \"./CardFront/CardFront\";\nimport CardBack from \"./CardBack/CardBack\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n    const { id, img, height, name, next_evolution, type, weaknesses, weight } = props;\n    const [isFrontCard, setCardState] = useState(true);\n    let cardStateCss = \"card card--showfront\";\n\n    if (!isFrontCard) {\n        cardStateCss = \"card card--showback\";\n    }\n\n    return (\n        <article id={`pokemon-${name}`} className={cardStateCss}>\n            <div className=\"card-flip\">\n                <CardFront id={id} img={img} name={name} type={type} />\n                <CardBack\n                    height={height}\n                    id={id}\n                    name={name}\n                    next_evolution={next_evolution}\n                    weaknesses={weaknesses}\n                    weight={weight}\n                />\n            </div>\n\n            <button className=\"flipcard-toggle\" onClick={() => setCardState((prevState) => !prevState)}>\n                <span className=\"visually-hidden\">Flip {name} card</span>\n            </button>\n        </article>\n    );\n}\n\nexport default Card;\n","import React, { Fragment } from \"react\";\nimport Card from \"../Card/Card\";\nimport \"./PokedexList.css\";\n\nfunction PokedexList(props) {\n    const { pokemon = [] } = props;\n\n    const messageOutput = <p className=\"pokedex-message\">Searching for Pok√©mon...</p>;\n\n    const outputList = (\n        <ul className=\"pokedex-list\">\n            {pokemon.map((p) => (\n                <li key={p.id}>\n                    <Card {...p} />\n                </li>\n            ))}\n        </ul>\n    );\n\n    return <Fragment>{pokemon.length ? outputList : messageOutput}</Fragment>;\n}\n\nexport default PokedexList;\n","import React, { Fragment } from \"react\";\nimport useFetch from \"../../hooks/useFetch\";\n\nimport PokedexList from \"../../components/PokedexList/PokedexList\";\nimport \"./App.css\";\n\nfunction useFetchPokemon() {\n    const result = useFetch(\"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\", {});\n\n    if (result.pokemon) {\n        // Sort in-place by name (A-Z)\n        // @note: Not keeping the original order, as this is not part of the requirements\n        return result.pokemon.sort((a, b) => {\n            const aName = a.name.toLowerCase();\n            const bName = b.name.toLowerCase();\n\n            if (aName > bName) {\n                return 1;\n            } else if (aName < bName) {\n                return -1;\n            }\n\n            // (Edge-case) Names are the same\n            return 0;\n        });\n    }\n\n    return [];\n}\n\nfunction App() {\n    const pokemon = useFetchPokemon();\n    return (\n        <Fragment>\n            <a className=\"skip-link\" href=\"#main\">\n                Skip to main content\n            </a>\n\n            <header>\n                <h1>A Pok√©mon Pok√©dex</h1>\n            </header>\n\n            <main id=\"main\">\n                <PokedexList pokemon={pokemon} />\n            </main>\n        </Fragment>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}